Assignment name : Magic String (E task Yandex)
Expected files : solution.swift
Allowed functions: All ðŸ™‚
--------------------------------------------------------------------------------

Antony loves riddles, especially those that can be solved with the help of programming. The other day a colleague puzzled him with finding "magic" strings. One string is considered "magic" in relation to another if they are equal in length and both consist of the same letters, with the exception of one letter in each of the strings.

For a given text T and a string S, it is required to find whether there is a "magic" substring in the text T with respect to the string S.
Examples can be found in the task notes. Try to find a solution with O(T) runtime asymptotics.

Input format:

The first line of the input contains the string T - text.
The second line of the input contains the string S - a string.

Restrictions:

0 â‰¤ T.length < 10 pow 8

0 â‰¤ S.length < 10 pow 8

The strings T and S consist of lowercase English letters.

Output Format:

The index at which the "magic" substring begins.
Print the smallest of the indexes if the text contains several "magic" substrings.
Print âˆ’1 if the text does not contain "magic" substrings.


Example:

----------------------------------------------------------------------
input.txt output.txt

abcddc 2
ccde

----------------------------------------------------------------------
input.txt output.txt

abcd-1
dcba

----------------------------------------------------------------------
input.txt output.txt

abcd-1
abef

----------------------------------------------------------------------

Example #1

Input:
abcddc
ccde


Output: 2

Explanation: The substring cddc is "magic" for the string ccde, the excluded letters are d in the text substring T and e in the string S.

----------------------------------------------------------------------
Example #2

Input:
abcd
dcba

Output: -1


Explanation: The substring abcd is an anagram for the string dcba, there are no distinct letters.